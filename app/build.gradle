apply plugin: 'com.android.application'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

static def releaseTime() {
    return new Date().format("yyyyMMdd")
}

android {

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
//        release {
//            storePassword '123456'
//            keyAlias = 'key0'
//            keyPassword '123456'
//            storeFile file('C:\\Users\\wcx\\Desktop\\mfhy.jks')
//        }
//        debug {
//            storeFile file('C:\\Users\\wcx\\Desktop\\mfhy.jks')
//
////            storeFile file('E:/workspace/Dc/ChineseChess/app/keystore/chinesechess.jks')
//            storePassword '123456'
//            keyAlias = 'key0'
//            keyPassword '123456'
//        }
    }








    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.yd.mofanghuanyuans"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

//        buildConfigField "String", "WX_APPID", '"wx4996b923f732e636"'
//        buildConfigField "String", "WX_APPSECRET", '"f5785b225557f962c66f986ba86729d1"'

        versionCode 2
        versionName "2.0.0"
        flavorDimensions "versionCode"





        //arouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
        }
        multiDexEnabled true
        lintOptions { checkReleaseBuilds false }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            // 缩减resource文件
            shrinkResources false
            //Proguard
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.release
            debuggable false
        }

        debug {
            shrinkResources false
            minifyEnabled false
            //签名
            signingConfig signingConfigs.release
            debuggable true
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            //这里修改apk文件名
            def fileName = "dengteng" +
                    "-vc${defaultConfig.versionCode}" +
                    "-vn${defaultConfig.versionName}" +
                    "-${releaseTime()}" +
                    "-${buildType.name}.apk"
            outputFileName = fileName
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    productFlavors {
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        oppo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "oppo"]
        }
        vivo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "vivo"]
        }
        huawei {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "huawei"]
        }
        meizu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "meizu"]
        }
        sanxing {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "sanxing"]
        }
        yingyongbao {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yingyongbao"]
        }
        none {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "none"]
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            // 输出apk名称为WeiLaiCheng1.0_2018-08-13.apk
            def fileName = "${defaultConfig.applicationId}_${variant.productFlavors[0].name}_${defaultConfig.versionName}.apk"
            outputFileName = fileName
        }
    }



}

dependencies {
    implementation files('libs\\umeng-common-9.1.3.jar')
    implementation files('libs\\umeng-common-9.1.3.jar')
    implementation files('libs\\libammsdk.jar')
    compile(name: 'open_ad_sdk', ext: 'aar')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':module_common')
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation project(path: ':mf_librarys')
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.arouterCompiler"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterknife"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.ext.glideVersion"
    implementation 'com.jpeng:JPTabBar:1.4.0'

    implementation "android.arch.core:runtime:1.1.1"
    implementation "android.arch.core:common:1.1.1"

    // 穿山甲广告接入
  //  implementation(name: 'open_ad_sdk', ext: 'aar')
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50'
    implementation 'com.zhihu.android:matisse:0.5.1'
    implementation 'com.lcw.library:imagepicker:2.2.7'

    // 友盟
    implementation files('libs/umeng-asms-armeabi-v1.1.3.aar')
    implementation files('libs/umeng-crash-armeabi-v0.0.4.aar')

    //微信登录
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    implementation 'androidx.appcompat:appcompat:1.0.0-alpha1'

    //fastjson
    implementation 'com.alibaba:fastjson:1.2.58'

        //支付宝
    compile (name: 'alipaysdk-15.8.03.210428205839', ext: 'aar')
}
